{
  "contractName": "Treasury",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nocturnalFinance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nocturnalFinance",
      "outputs": [
        {
          "internalType": "contract NocturnalFinanceInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "treasuryBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "setClaimantBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTreasuryBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nocturnalFinance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTreasuryBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nocturnalFinance\",\"outputs\":[{\"internalType\":\"contract NocturnalFinanceInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"setClaimantBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"treasuryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol\":{\"keccak256\":\"0xe8dee75492ef7ee2e89c85451fa2262491b7de3aca8c3caeb19420fa35931486\",\"urls\":[\"bzz-raw://f775dc9eccec00cfd161c029fad813f4a12162a50eb8a928bf85e7a5c6bee7db\",\"dweb:/ipfs/QmTX6gJsEP1gHJS1tDGVWC4D2HxpxzJK4EfNJwHGD5nUfE\"]},\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol\":{\"keccak256\":\"0xfabffa950882c4d83445c05b79914bf792c68a82a98712f68e86abe2bc2b7cae\",\"urls\":[\"bzz-raw://6f45bc13800b51d376a5fb58469619f5b26091b723dc8710280aed4f271a0f44\",\"dweb:/ipfs/QmdJfwA9UK3x2xz2jhg5QUjU5DTaqhXzZbTucmvx2iiwGy\"]},\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol\":{\"keccak256\":\"0x110df598a15b48cd134750bb9229e585394f4f96aacc435167c171dd1af832cd\",\"urls\":[\"bzz-raw://3e6497b3b6feaa1163eba4dfe3062724090c850268b5669cf5f499fd56498585\",\"dweb:/ipfs/QmSBJ5J7gTqLhvAVS7VSLMUSxnTea1k8LbDEGDd8HfjZtw\"]},\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":{\"keccak256\":\"0xfe4f6b7d3b90e3855d4b5d104db6532d4af71227135ff993dde1d95fb447c109\",\"urls\":[\"bzz-raw://d9e18fe2d365975ca9c9e56954eb54972bfd39949e81e156978e56789a056495\",\"dweb:/ipfs/QmeuBGtGkgniwGDFeNB7BgcsysR5aRg6SrdJxonMsdWCVL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161093638038061093683398101604081905261002f916100b6565b60006100396100b2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039092166001600160a01b03199283168117909155600380549092161790556100e4565b3390565b6000602082840312156100c7578081fd5b81516001600160a01b03811681146100dd578182fd5b9392505050565b610843806100f36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100c85780638da5cb5b146100d0578063ee64deab146100e5578063f2fde38b146100ed5761007d565b80631d6b34f714610082578063441950341461008c57806354445ae61461009f575b600080fd5b61008a610100565b005b61008a61009a36600461064d565b6102f5565b6100b26100ad36600461060e565b610391565b6040516100bf91906106df565b60405180910390f35b61008a6103a3565b6100d8610485565b6040516100bf9190610698565b6100d86104a1565b61008a6100fb36600461060e565b6104bd565b3360009081526002602052604090205461014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101469061077a565b60405180910390fd5b6003546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690638bf83b04906101a690600c906004016106df565b60206040518083038186803b1580156101be57600080fd5b505afa1580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610631565b33600081815260026020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb9261025b9290916004016106b9565b602060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190610678565b6102e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610146906107b1565b33600090815260026020526040812055565b6102fd61060a565b73ffffffffffffffffffffffffffffffffffffffff1661031b610485565b73ffffffffffffffffffffffffffffffffffffffff1614610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902055565b60026020526000908152604090205481565b6103ab61060a565b73ffffffffffffffffffffffffffffffffffffffff166103c9610485565b73ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6104c561060a565b73ffffffffffffffffffffffffffffffffffffffff166104e3610485565b73ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b73ffffffffffffffffffffffffffffffffffffffff811661057d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610146906106e8565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b60006020828403121561061f578081fd5b813561062a816107e8565b9392505050565b600060208284031215610642578081fd5b815161062a816107e8565b6000806040838503121561065f578081fd5b823561066a816107e8565b946020939093013593505050565b600060208284031215610689578081fd5b8151801515811461062a578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f696e73756666696369656e742074726561737572792062616c616e6365000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff8116811461080a57600080fd5b5056fea2646970667358221220b53d457d53b842522e583e52067ee81b4d7412bd0a73b3538e56713dfed2fc9464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100c85780638da5cb5b146100d0578063ee64deab146100e5578063f2fde38b146100ed5761007d565b80631d6b34f714610082578063441950341461008c57806354445ae61461009f575b600080fd5b61008a610100565b005b61008a61009a36600461064d565b6102f5565b6100b26100ad36600461060e565b610391565b6040516100bf91906106df565b60405180910390f35b61008a6103a3565b6100d8610485565b6040516100bf9190610698565b6100d86104a1565b61008a6100fb36600461060e565b6104bd565b3360009081526002602052604090205461014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101469061077a565b60405180910390fd5b6003546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690638bf83b04906101a690600c906004016106df565b60206040518083038186803b1580156101be57600080fd5b505afa1580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610631565b33600081815260026020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb9261025b9290916004016106b9565b602060405180830381600087803b15801561027557600080fd5b505af1158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190610678565b6102e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610146906107b1565b33600090815260026020526040812055565b6102fd61060a565b73ffffffffffffffffffffffffffffffffffffffff1661031b610485565b73ffffffffffffffffffffffffffffffffffffffff1614610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260026020526040902055565b60026020526000908152604090205481565b6103ab61060a565b73ffffffffffffffffffffffffffffffffffffffff166103c9610485565b73ffffffffffffffffffffffffffffffffffffffff1614610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6104c561060a565b73ffffffffffffffffffffffffffffffffffffffff166104e3610485565b73ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610745565b73ffffffffffffffffffffffffffffffffffffffff811661057d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610146906106e8565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b60006020828403121561061f578081fd5b813561062a816107e8565b9392505050565b600060208284031215610642578081fd5b815161062a816107e8565b6000806040838503121561065f578081fd5b823561066a816107e8565b946020939093013593505050565b600060208284031215610689578081fd5b8151801515811461062a578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f696e73756666696369656e742074726561737572792062616c616e6365000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff8116811461080a57600080fd5b5056fea2646970667358221220b53d457d53b842522e583e52067ee81b4d7412bd0a73b3538e56713dfed2fc9464736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:59",
                "type": ""
              }
            ],
            "src": "14:310:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3979:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:59",
                "type": ""
              }
            ],
            "src": "14:259:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:59",
                "type": ""
              }
            ],
            "src": "278:263:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:240:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "679:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "688:6:59"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "696:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "681:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "681:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "681:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "654:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "663:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "643:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:36:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "727:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:23:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "718:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "786:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "759:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "759:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "801:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "811:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "825:42:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "863:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "848:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "848:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "835:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "591:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "602:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "614:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "622:6:59",
                "type": ""
              }
            ],
            "src": "546:327:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:219:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1004:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "966:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1037:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1050:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1041:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1119:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1128:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1136:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1121:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1121:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1088:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1109:5:59"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1102:13:59"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1095:6:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1095:21:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1085:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:32:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1078:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:40:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1075:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1154:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1164:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "933:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:59",
                "type": ""
              }
            ],
            "src": "878:297:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:125:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1291:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1303:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1314:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1299:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1291:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1333:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1356:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1326:74:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1250:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1261:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1272:4:59",
                "type": ""
              }
            ],
            "src": "1180:226:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1540:168:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1550:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1562:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1558:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1550:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1592:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1607:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1603:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:74:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1679:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1690:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1675:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1675:18:59"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1695:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1668:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1668:34:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1501:9:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1520:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1531:4:59",
                "type": ""
              }
            ],
            "src": "1411:297:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:125:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1858:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1870:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1858:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1900:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1915:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1923:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1911:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1893:74:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$1262__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1817:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1828:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1839:4:59",
                "type": ""
              }
            ],
            "src": "1713:260:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2088:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2098:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2110:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2106:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2098:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2140:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2151:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2133:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2133:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2133:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_12_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2057:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2068:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2079:4:59",
                "type": ""
              }
            ],
            "src": "1978:186:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2343:228:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2360:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2371:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2353:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2353:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2394:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2405:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2390:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2410:2:59",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2383:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2383:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2433:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2444:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2449:34:59",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2422:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2422:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2504:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2515:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2500:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2500:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2520:8:59",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2493:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2493:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2493:36:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2538:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2550:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2561:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2538:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2320:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2334:4:59",
                "type": ""
              }
            ],
            "src": "2169:402:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2750:182:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2767:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2778:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2760:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2760:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2760:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2801:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2812:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2797:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2797:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2817:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2790:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2790:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2790:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2840:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2836:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2836:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2856:34:59",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2829:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2829:62:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2900:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2912:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2923:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2908:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2900:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2727:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2741:4:59",
                "type": ""
              }
            ],
            "src": "2576:356:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3111:179:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3128:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3139:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3121:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3121:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3162:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3173:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3158:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3158:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:2:59",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3151:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3151:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3151:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3201:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3212:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3197:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3197:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3217:31:59",
                        "type": "",
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3190:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:59:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3190:59:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3258:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3270:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3281:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3266:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3258:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3088:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3102:4:59",
                "type": ""
              }
            ],
            "src": "2937:353:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3469:165:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3486:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3497:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3479:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3479:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3520:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3531:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3516:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3536:2:59",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3509:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3509:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3509:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3559:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3570:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3575:17:59",
                        "type": "",
                        "value": "transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3548:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3548:45:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3548:45:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3602:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3614:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3625:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3610:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3602:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3446:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3460:4:59",
                "type": ""
              }
            ],
            "src": "3295:339:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3740:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3750:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3762:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3773:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3750:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3792:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3803:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3785:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3785:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3709:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3720:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3731:4:59",
                "type": ""
              }
            ],
            "src": "3639:177:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3868:109:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3955:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3964:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3967:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3957:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3957:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3957:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3891:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3902:5:59"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3909:42:59",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3898:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3898:54:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3888:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3888:65:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3881:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3881:73:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3878:2:59"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3857:5:59",
                "type": ""
              }
            ],
            "src": "3821:156:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$1262__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_rational_12_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"insufficient treasury balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1238:871:31:-:0;;;1469:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:32;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:32;-1:-1:-1;;;;;909:18:32;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:32;942:43;;909:6;;942:43;-1:-1:-1;1518:23:31;:43;;-1:-1:-1;;;;;1518:43:31;;;-1:-1:-1;;;;;;1518:43:31;;;;;;;;1571:16;:63;;;;;;;;1238:871;;586:96:43;665:10;586:96;:::o;14:310:59:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:59;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:59:o;:::-;1238:871:31;;;;;;",
  "deployedSourceMap": "1238:871:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:305;;;:::i;:::-;;1651:135;;;;;;:::i;:::-;;:::i;1348:50::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:32;;;:::i;1068:85::-;;;:::i;:::-;;;;;;;:::i;1409:49:31:-;;;:::i;1994:240:32:-;;;;;;:::i;:::-;;:::i;1796:305:31:-;1871:10;1885:1;1855:27;;;:15;:27;;;;;;1847:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:16;;:30;;;;;:16;;;;;:26;;:30;;1979:2;;1952:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1993:10;2005:27;;;;:15;:27;;;;;;;;1938:95;;;;;:54;;;;;;;;:95;;1993:10;;1938:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1930:123;;;;;;;;;;;;:::i;:::-;2079:10;2093:1;2063:27;;;:15;:27;;;;;:31;1796:305::o;1651:135::-;1291:12:32;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;1742:26:31::1;::::0;;::::1;;::::0;;;:15:::1;:26;::::0;;;;:37;1651:135::o;1348:50::-;;;;;;;;;;;;;:::o;1700:145:32:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;::::1;1790:6:::0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;;;1068:85;:::o;1409:49:31:-;;;;;;:::o;1994:240:32:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2082:22:::1;::::0;::::1;2074:73;;;;;;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;::::1;::::0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:43:-;665:10;586:96;:::o;14:259:59:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:59:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:327::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;863:2;848:18;;;;835:32;;-1:-1:-1;;;633:240:59:o;878:297::-;;998:2;986:9;977:7;973:23;969:32;966:2;;;1019:6;1011;1004:22;966:2;1056:9;1050:16;1109:5;1102:13;1095:21;1088:5;1085:32;1075:2;;1136:6;1128;1121:22;1180:226;1356:42;1344:55;;;;1326:74;;1314:2;1299:18;;1281:125::o;1411:297::-;1615:42;1603:55;;;;1585:74;;1690:2;1675:18;;1668:34;1573:2;1558:18;;1540:168::o;1978:186::-;2133:25;;;2121:2;2106:18;;2088:76::o;2169:402::-;2371:2;2353:21;;;2410:2;2390:18;;;2383:30;2449:34;2444:2;2429:18;;2422:62;2520:8;2515:2;2500:18;;2493:36;2561:3;2546:19;;2343:228::o;2576:356::-;2778:2;2760:21;;;2797:18;;;2790:30;2856:34;2851:2;2836:18;;2829:62;2923:2;2908:18;;2750:182::o;2937:353::-;3139:2;3121:21;;;3178:2;3158:18;;;3151:30;3217:31;3212:2;3197:18;;3190:59;3281:2;3266:18;;3111:179::o;3295:339::-;3497:2;3479:21;;;3536:2;3516:18;;;3509:30;3575:17;3570:2;3555:18;;3548:45;3625:2;3610:18;;3469:165::o;3821:156::-;3909:42;3902:5;3898:54;3891:5;3888:65;3878:2;;3967:1;3964;3957:12;3878:2;3868:109;:::o",
  "source": "/*                              $$\\                                             $$\\                                                         \n                                $$ |                                            $$ |                                                  \n$$$$$$$\\   $$$$$$\\   $$$$$$$\\ $$$$$$\\   $$\\   $$\\  $$$$$$\\  $$$$$$$\\   $$$$$$\\  $$ |     \n$$  __$$\\ $$  __$$\\ $$  _____|\\_$$  _|  $$ |  $$ |$$  __$$\\ $$  __$$\\  \\____$$\\ $$ |    \n$$ |  $$ |$$ /  $$ |$$ /        $$ |    $$ |  $$ |$$ |  \\__|$$ |  $$ | $$$$$$$ |$$ |     \n$$ |  $$ |$$ |  $$ |$$ |        $$ |$$\\ $$ |  $$ |$$ |      $$ |  $$ |$$  __$$ |$$ |     \n$$ |  $$ |\\$$$$$$  |\\$$$$$$$\\   \\$$$$  |\\$$$$$$  |$$ |      $$ |  $$ |\\$$$$$$$ |$$ |      \n\\__|  \\__| \\______/  \\_______|   \\____/  \\______/ \\__|      \\__|  \\__| \\_______|\\__|     \n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {NocturnalFinanceInterface} from \"./Interfaces/NocturnalFinanceInterface.sol\";\nimport {NoctInterface} from \"./Interfaces/NoctInterface.sol\";\nimport {NoctStakingInterface} from \"./Interfaces/NoctStakingInterface.sol\";\n\ncontract Treasury is Ownable {\n    using SafeMath for uint256;\n\n    address nocturnalFinanceAddress;\n    \n    mapping(address => uint256) public treasuryBalance;\n    \n    NocturnalFinanceInterface public nocturnalFinance;\n    \n    constructor(address _nocturnalFinance) {\n        nocturnalFinanceAddress = _nocturnalFinance;\n        nocturnalFinance = NocturnalFinanceInterface(_nocturnalFinance);\n    }\n    \n    function setClaimantBalance(address _claimant, uint _balance) external onlyOwner {\n        treasuryBalance[_claimant] = _balance;\n    }\n    \n    function claimTreasuryBalance() external {\n        require(treasuryBalance[msg.sender] > 0, \"insufficient treasury balance\");\n        require(NoctInterface(nocturnalFinance._contract(12)).transfer(msg.sender, treasuryBalance[msg.sender]), \"transfer failed\");\n        treasuryBalance[msg.sender] = 0;\n    }      \n}\n",
  "sourcePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
  "ast": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        6119
      ],
      "IERC20": [
        4427
      ],
      "NoctInterface": [
        1185
      ],
      "NoctStakingInterface": [
        1232
      ],
      "NocturnalFinanceInterface": [
        1262
      ],
      "Ownable": [
        3842
      ],
      "SafeMath": [
        6731
      ],
      "Treasury": [
        3732
      ]
    },
    "id": 3733,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3637,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3638,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 6732,
        "src": "845:57:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3639,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 3843,
        "src": "903:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3640,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 4428,
        "src": "956:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 3642,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1263,
        "src": "1013:85:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3641,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1021:25:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 3644,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1186,
        "src": "1099:61:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3643,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1107:13:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol",
        "file": "./Interfaces/NoctStakingInterface.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1233,
        "src": "1161:75:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3645,
              "name": "NoctStakingInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1169:20:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3647,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3842,
              "src": "1259:7:31"
            },
            "id": 3648,
            "nodeType": "InheritanceSpecifier",
            "src": "1259:7:31"
          }
        ],
        "contractDependencies": [
          3842,
          6119
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3732,
        "linearizedBaseContracts": [
          3732,
          3842,
          6119
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3651,
            "libraryName": {
              "id": 3649,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6731,
              "src": "1279:8:31"
            },
            "nodeType": "UsingForDirective",
            "src": "1273:27:31",
            "typeName": {
              "id": 3650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3653,
            "mutability": "mutable",
            "name": "nocturnalFinanceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1306:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1306:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "54445ae6",
            "id": 3657,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1348:50:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3656,
              "keyType": {
                "id": 3654,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1356:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1348:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1367:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 3660,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1409:49:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 3659,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3658,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1262,
                "src": "1409:25:31"
              },
              "referencedDeclaration": 1262,
              "src": "1409:25:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3675,
              "nodeType": "Block",
              "src": "1508:133:31",
              "statements": [
                {
                  "expression": {
                    "id": 3667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3665,
                      "name": "nocturnalFinanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "1518:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3666,
                      "name": "_nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "1544:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1518:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3668,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:43:31"
                },
                {
                  "expression": {
                    "id": 3673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3669,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "1571:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3671,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3662,
                          "src": "1616:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3670,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "1590:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$1262_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1590:44:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1571:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 3674,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:63:31"
                }
              ]
            },
            "id": 3676,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3662,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3676,
                  "src": "1481:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:27:31"
            },
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:31"
            },
            "scope": 3732,
            "src": "1469:172:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3691,
              "nodeType": "Block",
              "src": "1732:54:31",
              "statements": [
                {
                  "expression": {
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3685,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3657,
                        "src": "1742:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3687,
                      "indexExpression": {
                        "id": 3686,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "1758:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1742:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3688,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "1771:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1742:37:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3690,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:37:31"
                }
              ]
            },
            "functionSelector": "44195034",
            "id": 3692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3683,
                "modifierName": {
                  "id": 3682,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3791,
                  "src": "1722:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:31"
              }
            ],
            "name": "setClaimantBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "1679:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "1698:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1678:34:31"
            },
            "returnParameters": {
              "id": 3684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:31"
            },
            "scope": 3732,
            "src": "1651:135:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "1837:264:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3696,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3657,
                            "src": "1855:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3699,
                          "indexExpression": {
                            "expression": {
                              "id": 3697,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1871:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1871:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1855:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1885:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1855:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1847:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3713,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1993:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1993:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 3715,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3657,
                              "src": "2005:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3718,
                            "indexExpression": {
                              "expression": {
                                "id": 3716,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2021:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2021:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2005:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "3132",
                                    "id": 3709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1979:2:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3707,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3660,
                                    "src": "1952:16:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 3708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_contract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1241,
                                  "src": "1952:26:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 3710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1952:30:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3706,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "1938:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$1185_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 3711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1938:45:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$1185",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1127,
                          "src": "1938:54:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1938:95:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 3705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1930:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:123:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3722,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:123:31"
                },
                {
                  "expression": {
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3723,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3657,
                        "src": "2063:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3726,
                      "indexExpression": {
                        "expression": {
                          "id": 3724,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2079:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2079:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2063:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2093:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2063:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:31:31"
                }
              ]
            },
            "functionSelector": "1d6b34f7",
            "id": 3731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:31"
            },
            "returnParameters": {
              "id": 3694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:31"
            },
            "scope": 3732,
            "src": "1796:305:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3733,
        "src": "1238:871:31"
      }
    ],
    "src": "820:1290:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        6119
      ],
      "IERC20": [
        4427
      ],
      "NoctInterface": [
        1185
      ],
      "NoctStakingInterface": [
        1232
      ],
      "NocturnalFinanceInterface": [
        1262
      ],
      "Ownable": [
        3842
      ],
      "SafeMath": [
        6731
      ],
      "Treasury": [
        3732
      ]
    },
    "id": 3733,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3637,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3638,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 6732,
        "src": "845:57:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3639,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 3843,
        "src": "903:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3640,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 4428,
        "src": "956:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 3642,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1263,
        "src": "1013:85:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3641,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1021:25:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 3644,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1186,
        "src": "1099:61:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3643,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1107:13:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol",
        "file": "./Interfaces/NoctStakingInterface.sol",
        "id": 3646,
        "nodeType": "ImportDirective",
        "scope": 3733,
        "sourceUnit": 1233,
        "src": "1161:75:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3645,
              "name": "NoctStakingInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1169:20:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3647,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3842,
              "src": "1259:7:31"
            },
            "id": 3648,
            "nodeType": "InheritanceSpecifier",
            "src": "1259:7:31"
          }
        ],
        "contractDependencies": [
          3842,
          6119
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3732,
        "linearizedBaseContracts": [
          3732,
          3842,
          6119
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3651,
            "libraryName": {
              "id": 3649,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6731,
              "src": "1279:8:31"
            },
            "nodeType": "UsingForDirective",
            "src": "1273:27:31",
            "typeName": {
              "id": 3650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3653,
            "mutability": "mutable",
            "name": "nocturnalFinanceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1306:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1306:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "54445ae6",
            "id": 3657,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1348:50:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3656,
              "keyType": {
                "id": 3654,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1356:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1348:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1367:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 3660,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 3732,
            "src": "1409:49:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 3659,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3658,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1262,
                "src": "1409:25:31"
              },
              "referencedDeclaration": 1262,
              "src": "1409:25:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3675,
              "nodeType": "Block",
              "src": "1508:133:31",
              "statements": [
                {
                  "expression": {
                    "id": 3667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3665,
                      "name": "nocturnalFinanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "1518:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3666,
                      "name": "_nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3662,
                      "src": "1544:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1518:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3668,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:43:31"
                },
                {
                  "expression": {
                    "id": 3673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3669,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3660,
                      "src": "1571:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3671,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3662,
                          "src": "1616:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3670,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "1590:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$1262_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1590:44:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1571:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 3674,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:63:31"
                }
              ]
            },
            "id": 3676,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3662,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3676,
                  "src": "1481:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:27:31"
            },
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:31"
            },
            "scope": 3732,
            "src": "1469:172:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3691,
              "nodeType": "Block",
              "src": "1732:54:31",
              "statements": [
                {
                  "expression": {
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3685,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3657,
                        "src": "1742:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3687,
                      "indexExpression": {
                        "id": 3686,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "1758:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1742:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3688,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "1771:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1742:37:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3690,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:37:31"
                }
              ]
            },
            "functionSelector": "44195034",
            "id": 3692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3683,
                "modifierName": {
                  "id": 3682,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3791,
                  "src": "1722:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:31"
              }
            ],
            "name": "setClaimantBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "1679:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "1698:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1678:34:31"
            },
            "returnParameters": {
              "id": 3684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:31"
            },
            "scope": 3732,
            "src": "1651:135:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "1837:264:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3696,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3657,
                            "src": "1855:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3699,
                          "indexExpression": {
                            "expression": {
                              "id": 3697,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1871:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1871:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1855:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1885:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1855:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1847:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3713,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1993:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1993:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 3715,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3657,
                              "src": "2005:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3718,
                            "indexExpression": {
                              "expression": {
                                "id": 3716,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2021:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2021:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2005:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "3132",
                                    "id": 3709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1979:2:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3707,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3660,
                                    "src": "1952:16:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1262",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 3708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_contract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1241,
                                  "src": "1952:26:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 3710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1952:30:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3706,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "1938:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$1185_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 3711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1938:45:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$1185",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1127,
                          "src": "1938:54:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1938:95:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 3705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1930:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:123:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3722,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:123:31"
                },
                {
                  "expression": {
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3723,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3657,
                        "src": "2063:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3726,
                      "indexExpression": {
                        "expression": {
                          "id": 3724,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2079:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2079:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2063:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2093:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2063:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:31:31"
                }
              ]
            },
            "functionSelector": "1d6b34f7",
            "id": 3731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:31"
            },
            "returnParameters": {
              "id": 3694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:31"
            },
            "scope": 3732,
            "src": "1796:305:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3733,
        "src": "1238:871:31"
      }
    ],
    "src": "820:1290:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "50": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x599110e013c21aea70b7dCd12918fad306beF662",
      "transactionHash": "0xcfe40374cfbb9d570a0a825e01e73ee82f97886628eda4a3a798197d1c55bf1c"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-06-13T21:00:46.695Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}