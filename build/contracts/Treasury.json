{
  "contractName": "Treasury",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nocturnalFinance",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nocturnalFinance",
      "outputs": [
        {
          "internalType": "contract NocturnalFinanceInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "setClaimantBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTreasuryBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeTreasuryBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nocturnalFinance\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTreasuryBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nocturnalFinance\",\"outputs\":[{\"internalType\":\"contract NocturnalFinanceInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"setClaimantBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTreasuryBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol\":{\"keccak256\":\"0xe8dee75492ef7ee2e89c85451fa2262491b7de3aca8c3caeb19420fa35931486\",\"urls\":[\"bzz-raw://f775dc9eccec00cfd161c029fad813f4a12162a50eb8a928bf85e7a5c6bee7db\",\"dweb:/ipfs/QmTX6gJsEP1gHJS1tDGVWC4D2HxpxzJK4EfNJwHGD5nUfE\"]},\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol\":{\"keccak256\":\"0xfabffa950882c4d83445c05b79914bf792c68a82a98712f68e86abe2bc2b7cae\",\"urls\":[\"bzz-raw://6f45bc13800b51d376a5fb58469619f5b26091b723dc8710280aed4f271a0f44\",\"dweb:/ipfs/QmdJfwA9UK3x2xz2jhg5QUjU5DTaqhXzZbTucmvx2iiwGy\"]},\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol\":{\"keccak256\":\"0x110df598a15b48cd134750bb9229e585394f4f96aacc435167c171dd1af832cd\",\"urls\":[\"bzz-raw://3e6497b3b6feaa1163eba4dfe3062724090c850268b5669cf5f499fd56498585\",\"dweb:/ipfs/QmSBJ5J7gTqLhvAVS7VSLMUSxnTea1k8LbDEGDd8HfjZtw\"]},\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":{\"keccak256\":\"0x3d4d3141ad8e6aa3fdc04defe5235a632611a9f2ca6f02c1fc0dd6005a7ce6f6\",\"urls\":[\"bzz-raw://1c9f2d1071c5918a504b16b24601977cfa196777ecb3b1656bd34c11b363a21b\",\"dweb:/ipfs/Qmc1UK88miFnkNFLTqEKUUrMN8ne65Bk9XccD9MpHdzrt7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610db1380380610db183398101604081905261002f916100e5565b60006100396100ce565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061009a81836100d260201b6109a21790919060201c565b6001555050600280546001600160a01b039092166001600160a01b031992831681179091556004805490921617905561014a565b3390565b60006100de8284610126565b9392505050565b6000806000606084860312156100f9578283fd5b83516001600160a01b038116811461010f578384fd5b602085015160409095015190969495509392505050565b6000821982111561014557634e487b7160e01b81526011600452602481fd5b500190565b610c58806101596000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba578063b29c2ba8146100d8578063ee64deab146100e0578063f2fde38b146100e857610088565b8063029a93e91461008d5780631d6b34f714610097578063441950341461009f578063715018a6146100b2575b600080fd5b6100956100fb565b005b61009561031f565b6100956100ad3660046109f1565b61050a565b6100956105a6565b6100c2610688565b6040516100cf9190610a3c565b60405180910390f35b6100956106a4565b6100c2610839565b6100956100f63660046109b9565b610855565b60025473ffffffffffffffffffffffffffffffffffffffff163314610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b55565b60405180910390fd5b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916101ab91600c9101610a83565b60206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fb91906109d5565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384169363095ea7b393921691638bf83b049161025a9160009101610a83565b60206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa91906109d5565b6001546040518363ffffffff1660e01b81526004016102ca929190610a5d565b602060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610a1c565b50565b33600090815260036020526040902054610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b1e565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916103bb91600c9101610a83565b60206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b91906109d5565b33600081815260036020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb92610470929091600401610a5d565b602060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190610a1c565b6104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b8c565b33600090815260036020526040812055565b6105126109b5565b73ffffffffffffffffffffffffffffffffffffffff16610530610688565b73ffffffffffffffffffffffffffffffffffffffff161461057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260036020526040902055565b6105ae6109b5565b73ffffffffffffffffffffffffffffffffffffffff166105cc610688565b73ffffffffffffffffffffffffffffffffffffffff1614610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b336000908152600360205260409020546106ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b1e565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916107409160009101610a83565b60206040518083038186803b15801561075857600080fd5b505afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079091906109d5565b33600081815260036020526040908190205490517fbaffb69f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263baffb69f926107f5929091600401610a5d565b600060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b5050336000908152600360205260408120555050565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b61085d6109b5565b73ffffffffffffffffffffffffffffffffffffffff1661087b610688565b73ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b73ffffffffffffffffffffffffffffffffffffffff8116610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610a8c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006109ae8284610bc3565b9392505050565b3390565b6000602082840312156109ca578081fd5b81356109ae81610c00565b6000602082840312156109e6578081fd5b81516109ae81610c00565b60008060408385031215610a03578081fd5b8235610a0e81610c00565b946020939093013593505050565b600060208284031215610a2d578081fd5b815180151581146109ae578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f696e73756666696369656e742074726561737572792062616c616e6365000000604082015260600190565b60208082526015908201527f6e6f74204e6f637475726e616c2046696e616e63650000000000000000000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b60008219821115610bfb577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b73ffffffffffffffffffffffffffffffffffffffff8116811461031c57600080fdfea2646970667358221220495fa1fdfde14d9299b1ccc524e2ab191696fb5fb4551279155fd484f6463c6e64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba578063b29c2ba8146100d8578063ee64deab146100e0578063f2fde38b146100e857610088565b8063029a93e91461008d5780631d6b34f714610097578063441950341461009f578063715018a6146100b2575b600080fd5b6100956100fb565b005b61009561031f565b6100956100ad3660046109f1565b61050a565b6100956105a6565b6100c2610688565b6040516100cf9190610a3c565b60405180910390f35b6100956106a4565b6100c2610839565b6100956100f63660046109b9565b610855565b60025473ffffffffffffffffffffffffffffffffffffffff163314610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b55565b60405180910390fd5b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916101ab91600c9101610a83565b60206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fb91906109d5565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384169363095ea7b393921691638bf83b049161025a9160009101610a83565b60206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa91906109d5565b6001546040518363ffffffff1660e01b81526004016102ca929190610a5d565b602060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610a1c565b50565b33600090815260036020526040902054610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b1e565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916103bb91600c9101610a83565b60206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b91906109d5565b33600081815260036020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb92610470929091600401610a5d565b602060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190610a1c565b6104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b8c565b33600090815260036020526040812055565b6105126109b5565b73ffffffffffffffffffffffffffffffffffffffff16610530610688565b73ffffffffffffffffffffffffffffffffffffffff161461057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260036020526040902055565b6105ae6109b5565b73ffffffffffffffffffffffffffffffffffffffff166105cc610688565b73ffffffffffffffffffffffffffffffffffffffff1614610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b336000908152600360205260409020546106ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610b1e565b600480546040517f8bf83b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691638bf83b04916107409160009101610a83565b60206040518083038186803b15801561075857600080fd5b505afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079091906109d5565b33600081815260036020526040908190205490517fbaffb69f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263baffb69f926107f5929091600401610a5d565b600060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b5050336000908152600360205260408120555050565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b61085d6109b5565b73ffffffffffffffffffffffffffffffffffffffff1661087b610688565b73ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610ae9565b73ffffffffffffffffffffffffffffffffffffffff8116610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c90610a8c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006109ae8284610bc3565b9392505050565b3390565b6000602082840312156109ca578081fd5b81356109ae81610c00565b6000602082840312156109e6578081fd5b81516109ae81610c00565b60008060408385031215610a03578081fd5b8235610a0e81610c00565b946020939093013593505050565b600060208284031215610a2d578081fd5b815180151581146109ae578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f696e73756666696369656e742074726561737572792062616c616e6365000000604082015260600190565b60208082526015908201527f6e6f74204e6f637475726e616c2046696e616e63650000000000000000000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b60008219821115610bfb577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b73ffffffffffffffffffffffffffffffffffffffff8116811461031c57600080fdfea2646970667358221220495fa1fdfde14d9299b1ccc524e2ab191696fb5fb4551279155fd484f6463c6e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:682:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "129:317:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "175:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "184:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "192:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "177:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "177:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "177:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "150:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "159:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "146:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "146:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "171:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "142:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "139:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "210:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "229:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "223:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "214:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "302:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "311:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "304:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "304:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "304:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "261:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "272:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "287:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "292:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "283:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "283:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "296:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "279:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "268:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "268:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "258:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "258:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "251:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "248:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "347:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "337:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "361:35:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "381:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "392:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "377:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "377:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "371:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "371:25:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "361:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "405:35:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "425:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "436:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "421:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "421:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "415:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "415:25:59"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "405:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "79:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "90:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "102:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "110:6:59",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "118:6:59",
                "type": ""
              }
            ],
            "src": "14:432:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "499:181:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "534:115:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "555:3:59"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "564:3:59",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "569:10:59",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "560:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "560:20:59"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "548:33:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "548:33:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "601:1:59",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "604:4:59",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "594:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "594:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "594:15:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "629:3:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "634:4:59",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:17:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:17:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "515:1:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "522:1:59"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "518:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "518:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "512:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:13:59"
                  },
                  "nodeType": "YulIf",
                  "src": "509:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "658:16:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "669:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "672:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "665:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "665:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "658:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "482:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "485:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "491:3:59",
                "type": ""
              }
            ],
            "src": "451:229:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4628:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:59",
                "type": ""
              }
            ],
            "src": "14:259:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:59",
                "type": ""
              }
            ],
            "src": "278:263:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:240:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "679:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "688:6:59"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "696:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "681:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "681:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "681:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "654:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "663:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "643:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:36:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "727:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:23:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "718:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "786:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "759:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "759:33:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "801:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "811:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "825:42:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "863:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "848:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "848:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "835:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "591:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "602:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "614:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "622:6:59",
                "type": ""
              }
            ],
            "src": "546:327:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:219:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1004:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "966:2:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1037:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1050:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:16:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1041:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1119:26:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1128:6:59"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1136:6:59"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1121:22:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1121:22:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1088:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1109:5:59"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1102:13:59"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1095:6:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1095:21:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1085:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:32:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1078:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:40:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1075:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1154:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1164:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "933:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:59",
                "type": ""
              }
            ],
            "src": "878:297:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:125:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1291:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1303:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1314:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1299:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1291:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1333:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1356:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1326:74:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1250:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1261:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1272:4:59",
                "type": ""
              }
            ],
            "src": "1180:226:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1540:168:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1550:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1562:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1558:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1550:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1592:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1607:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1603:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:74:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1679:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1690:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1675:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1675:18:59"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1695:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1668:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1668:34:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1501:9:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1520:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1531:4:59",
                "type": ""
              }
            ],
            "src": "1411:297:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:125:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1858:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1870:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1858:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1900:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1915:6:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1923:42:59",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1911:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:74:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1893:74:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$1209__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1817:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1828:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1839:4:59",
                "type": ""
              }
            ],
            "src": "1713:260:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2150:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:59",
                "type": ""
              }
            ],
            "src": "1978:185:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2278:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2288:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2300:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2311:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2296:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2288:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2330:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2341:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2323:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2323:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_12_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2247:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2258:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2269:4:59",
                "type": ""
              }
            ],
            "src": "2168:186:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2533:228:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2550:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2561:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2543:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2543:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2584:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2600:2:59",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2573:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2623:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2634:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2619:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2639:34:59",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2612:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2612:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2612:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2694:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2705:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2690:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2690:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2710:8:59",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2683:36:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2728:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2740:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2751:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2736:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2728:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2510:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2524:4:59",
                "type": ""
              }
            ],
            "src": "2359:402:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2940:182:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2957:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2968:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2950:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2950:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2950:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2991:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3002:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2987:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2987:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3007:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2980:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2980:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2980:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3030:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3041:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3026:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3026:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3046:34:59",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:62:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3090:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3102:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3113:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3098:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3090:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2917:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2931:4:59",
                "type": ""
              }
            ],
            "src": "2766:356:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3301:179:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3318:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3329:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3311:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3311:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3311:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3352:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3363:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3348:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3348:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3368:2:59",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3341:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3341:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3341:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3391:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3402:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3387:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3387:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3407:31:59",
                        "type": "",
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3380:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3380:59:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3380:59:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3448:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3460:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3471:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3456:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3448:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3278:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3292:4:59",
                "type": ""
              }
            ],
            "src": "3127:353:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3659:171:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3676:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3687:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3669:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3669:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3669:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3710:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3721:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3706:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3706:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3726:2:59",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3699:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3699:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3699:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3749:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3760:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3745:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3745:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3765:23:59",
                        "type": "",
                        "value": "not Nocturnal Finance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:51:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:51:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3798:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3810:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3821:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3806:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3806:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3798:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3636:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3650:4:59",
                "type": ""
              }
            ],
            "src": "3485:345:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4009:165:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4026:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4037:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4019:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4019:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4019:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4060:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4071:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4056:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4056:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4076:2:59",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4049:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4049:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4049:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4099:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4110:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4095:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4095:18:59"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4115:17:59",
                        "type": "",
                        "value": "transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4088:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4088:45:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4088:45:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4142:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4154:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4165:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4150:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4150:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4142:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3986:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4000:4:59",
                "type": ""
              }
            ],
            "src": "3835:339:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4227:238:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4262:172:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "4283:3:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4288:77:59",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4276:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4276:90:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4276:90:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4386:1:59",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4389:4:59",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4379:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4379:15:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4379:15:59"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "4414:3:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4419:4:59",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4407:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4407:17:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4407:17:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4243:1:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4250:1:59"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4246:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4246:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4240:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:13:59"
                  },
                  "nodeType": "YulIf",
                  "src": "4237:2:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4443:16:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4454:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4457:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4450:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4450:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4443:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4210:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4213:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4219:3:59",
                "type": ""
              }
            ],
            "src": "4179:286:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4517:109:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4604:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4613:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4616:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4606:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4606:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4606:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4540:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4551:5:59"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4558:42:59",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4547:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4547:54:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4537:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4537:65:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4530:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4530:73:59"
                  },
                  "nodeType": "YulIf",
                  "src": "4527:2:59"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4506:5:59",
                "type": ""
              }
            ],
            "src": "4470:156:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$1209__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_rational_12_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"insufficient treasury balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"not Nocturnal Finance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1238:1523:31:-:0;;;1487:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:32;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:32;-1:-1:-1;;;;;909:18:32;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:32;942:43;;909:6;;942:43;842:150;1598:34:31;1617:14;1598;:18;;;;;;:34;;;;:::i;:::-;1584:11;:48;-1:-1:-1;;1642:23:31;:43;;-1:-1:-1;;;;;1642:43:31;;;-1:-1:-1;;;;;;1642:43:31;;;;;;;;1695:16;:63;;;;;;;;1238:1523;;586:96:43;665:10;586:96;:::o;2672::48:-;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:48:o;14:432:59:-;;;;171:2;159:9;150:7;146:23;142:32;139:2;;;192:6;184;177:22;139:2;223:16;;-1:-1:-1;;;;;268:31:59;;258:42;;248:2;;319:6;311;304:22;248:2;392;377:18;;371:25;436:2;421:18;;;415:25;347:5;;371:25;;-1:-1:-1;415:25:59;129:317;-1:-1:-1;;;129:317:59:o;451:229::-;;522:1;518:6;515:1;512:13;509:2;;;-1:-1:-1;;;548:33:59;;604:4;601:1;594:15;634:4;555:3;622:17;509:2;-1:-1:-1;665:9:59;;499:181::o;:::-;1238:1523:31;;;;;;",
  "deployedSourceMap": "1238:1523:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:223;;;:::i;:::-;;2153:305;;;:::i;2008:135::-;;;;;;:::i;:::-;;:::i;1700:145:32:-;;;:::i;1068:85::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2472:284:31;;;:::i;1427:49::-;;;:::i;1994:240:32:-;;;;;;:::i;:::-;;:::i;1775:223:31:-;1842:23;;;;1828:10;:37;1820:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1908:16;;;:30;;;;;:16;;;;;:26;;:30;;1935:2;;1908:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1948:16;;;:29;;;;;1901:46;;;;;;;1948:16;;;:26;;:29;;:16;;:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1979:11;;1901:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1775:223::o;2153:305::-;2228:10;2242:1;2212:27;;;:15;:27;;;;;;2204:73;;;;;;;;;;;;:::i;:::-;2309:16;;;:30;;;;;:16;;;;;:26;;:30;;2336:2;;2309:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2350:10;2362:27;;;;:15;:27;;;;;;;;2295:95;;;;;:54;;;;;;;;:95;;2350:10;;2295:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2287:123;;;;;;;;;;;;:::i;:::-;2436:10;2450:1;2420:27;;;:15;:27;;;;;:31;2153:305::o;2008:135::-;1291:12:32;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2099:26:31::1;::::0;;::::1;;::::0;;;:15:::1;:26;::::0;;;;:37;2008:135::o;1700:145:32:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;::::1;1790:6:::0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;;;1068:85;:::o;2472:284:31:-;2547:10;2561:1;2531:27;;;:15;:27;;;;;;2523:73;;;;;;;;;;;;:::i;:::-;2627:16;;;:29;;;;;:16;;;;;:26;;:29;;:16;;:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2668:10;2680:27;;;;:15;:27;;;;;;;;2606:102;;;;;:61;;;;;;;;:102;;2668:10;;2606:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2734:10:31;2748:1;2718:27;;;:15;:27;;;;;:31;-1:-1:-1;;2472:284:31:o;1427:49::-;;;;;;:::o;1994:240:32:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2082:22:::1;::::0;::::1;2074:73;;;;;;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;::::1;::::0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2672:96:48:-;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:48:o;586::43:-;665:10;586:96;:::o;14:259:59:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:327::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;863:2;848:18;;;;835:32;;-1:-1:-1;;;633:240:59:o;878:297::-;;998:2;986:9;977:7;973:23;969:32;966:2;;;1019:6;1011;1004:22;966:2;1056:9;1050:16;1109:5;1102:13;1095:21;1088:5;1085:32;1075:2;;1136:6;1128;1121:22;1180:226;1356:42;1344:55;;;;1326:74;;1314:2;1299:18;;1281:125::o;1411:297::-;1615:42;1603:55;;;;1585:74;;1690:2;1675:18;;1668:34;1573:2;1558:18;;1540:168::o;1978:185::-;2132:25;;;2120:2;2105:18;;2087:76::o;2359:402::-;2561:2;2543:21;;;2600:2;2580:18;;;2573:30;2639:34;2634:2;2619:18;;2612:62;2710:8;2705:2;2690:18;;2683:36;2751:3;2736:19;;2533:228::o;2766:356::-;2968:2;2950:21;;;2987:18;;;2980:30;3046:34;3041:2;3026:18;;3019:62;3113:2;3098:18;;2940:182::o;3127:353::-;3329:2;3311:21;;;3368:2;3348:18;;;3341:30;3407:31;3402:2;3387:18;;3380:59;3471:2;3456:18;;3301:179::o;3485:345::-;3687:2;3669:21;;;3726:2;3706:18;;;3699:30;3765:23;3760:2;3745:18;;3738:51;3821:2;3806:18;;3659:171::o;3835:339::-;4037:2;4019:21;;;4076:2;4056:18;;;4049:30;4115:17;4110:2;4095:18;;4088:45;4165:2;4150:18;;4009:165::o;4179:286::-;;4250:1;4246:6;4243:1;4240:13;4237:2;;;4288:77;4283:3;4276:90;4389:4;4386:1;4379:15;4419:4;4414:3;4407:17;4237:2;-1:-1:-1;4450:9:59;;4227:238::o;4470:156::-;4558:42;4551:5;4547:54;4540:5;4537:65;4527:2;;4616:1;4613;4606:12",
  "source": "/*                              $$\\                                             $$\\                                                         \n                                $$ |                                            $$ |                                                  \n$$$$$$$\\   $$$$$$\\   $$$$$$$\\ $$$$$$\\   $$\\   $$\\  $$$$$$\\  $$$$$$$\\   $$$$$$\\  $$ |     \n$$  __$$\\ $$  __$$\\ $$  _____|\\_$$  _|  $$ |  $$ |$$  __$$\\ $$  __$$\\  \\____$$\\ $$ |    \n$$ |  $$ |$$ /  $$ |$$ /        $$ |    $$ |  $$ |$$ |  \\__|$$ |  $$ | $$$$$$$ |$$ |     \n$$ |  $$ |$$ |  $$ |$$ |        $$ |$$\\ $$ |  $$ |$$ |      $$ |  $$ |$$  __$$ |$$ |     \n$$ |  $$ |\\$$$$$$  |\\$$$$$$$\\   \\$$$$  |\\$$$$$$  |$$ |      $$ |  $$ |\\$$$$$$$ |$$ |      \n\\__|  \\__| \\______/  \\_______|   \\____/  \\______/ \\__|      \\__|  \\__| \\_______|\\__|     \n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {NocturnalFinanceInterface} from \"./Interfaces/NocturnalFinanceInterface.sol\";\nimport {NoctInterface} from \"./Interfaces/NoctInterface.sol\";\nimport {NoctStakingInterface} from \"./Interfaces/NoctStakingInterface.sol\";\n\ncontract Treasury is Ownable {\n    using SafeMath for uint256;\n\n    uint256 totalSupply;\n    address nocturnalFinanceAddress;\n    \n    mapping(address => uint256) treasuryBalance;\n    \n    NocturnalFinanceInterface public nocturnalFinance;\n    \n    constructor(address _nocturnalFinance, uint256 _rewardsSupply, uint256 _initialSupply) {\n        totalSupply = _rewardsSupply.add(_initialSupply);\n        nocturnalFinanceAddress = _nocturnalFinance;\n        nocturnalFinance = NocturnalFinanceInterface(_nocturnalFinance);\n    }\n    \n    function approveStaking() external {\n        require(msg.sender == nocturnalFinanceAddress, \"not Nocturnal Finance\");\n        IERC20(nocturnalFinance._contract(12)).approve(nocturnalFinance._contract(0), totalSupply);\n    }\n    \n    function setClaimantBalance(address _claimant, uint _balance) external onlyOwner {\n        treasuryBalance[_claimant] = _balance;\n    }\n    \n    function claimTreasuryBalance() external {\n        require(treasuryBalance[msg.sender] > 0, \"insufficient treasury balance\");\n        require(NoctInterface(nocturnalFinance._contract(12)).transfer(msg.sender, treasuryBalance[msg.sender]), \"transfer failed\");\n        treasuryBalance[msg.sender] = 0;\n    }    \n    \n    function stakeTreasuryBalance() external {\n        require(treasuryBalance[msg.sender] > 0, \"insufficient treasury balance\");\n        NoctStakingInterface(nocturnalFinance._contract(0)).autoStake(msg.sender, treasuryBalance[msg.sender]);\n        treasuryBalance[msg.sender] = 0;\n    }   \n}\n",
  "sourcePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
  "ast": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        6238
      ],
      "IERC20": [
        4546
      ],
      "NoctInterface": [
        1132
      ],
      "NoctStakingInterface": [
        1179
      ],
      "NocturnalFinanceInterface": [
        1209
      ],
      "Ownable": [
        3961
      ],
      "SafeMath": [
        6850
      ],
      "Treasury": [
        3851
      ]
    },
    "id": 3852,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3682,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 6851,
        "src": "845:57:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3683,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 3962,
        "src": "903:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3684,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 4547,
        "src": "956:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 3686,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1210,
        "src": "1013:85:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3685,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1021:25:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 3688,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1133,
        "src": "1099:61:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3687,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1107:13:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol",
        "file": "./Interfaces/NoctStakingInterface.sol",
        "id": 3690,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1180,
        "src": "1161:75:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3689,
              "name": "NoctStakingInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1169:20:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3691,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3961,
              "src": "1259:7:31"
            },
            "id": 3692,
            "nodeType": "InheritanceSpecifier",
            "src": "1259:7:31"
          }
        ],
        "contractDependencies": [
          3961,
          6238
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3851,
        "linearizedBaseContracts": [
          3851,
          3961,
          6238
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3695,
            "libraryName": {
              "id": 3693,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6850,
              "src": "1279:8:31"
            },
            "nodeType": "UsingForDirective",
            "src": "1273:27:31",
            "typeName": {
              "id": 3694,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3697,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1306:19:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1306:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3699,
            "mutability": "mutable",
            "name": "nocturnalFinanceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1331:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3698,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3703,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1373:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3702,
              "keyType": {
                "id": 3700,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1381:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1373:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3701,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1392:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 3706,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1427:49:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 3705,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3704,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1209,
                "src": "1427:25:31"
              },
              "referencedDeclaration": 1209,
              "src": "1427:25:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3732,
              "nodeType": "Block",
              "src": "1574:191:31",
              "statements": [
                {
                  "expression": {
                    "id": 3720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3715,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "1584:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3718,
                          "name": "_initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3712,
                          "src": "1617:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3716,
                          "name": "_rewardsSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3710,
                          "src": "1598:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6714,
                        "src": "1598:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1598:34:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1584:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3721,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:48:31"
                },
                {
                  "expression": {
                    "id": 3724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3722,
                      "name": "nocturnalFinanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3699,
                      "src": "1642:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3723,
                      "name": "_nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3708,
                      "src": "1668:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1642:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3725,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:43:31"
                },
                {
                  "expression": {
                    "id": 3730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3726,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "1695:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3728,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3708,
                          "src": "1740:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3727,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "1714:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$1209_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:44:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1695:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 3731,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:63:31"
                }
              ]
            },
            "id": 3733,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3708,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1499:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3710,
                  "mutability": "mutable",
                  "name": "_rewardsSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1526:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3712,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1550:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:75:31"
            },
            "returnParameters": {
              "id": 3714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1574:0:31"
            },
            "scope": 3851,
            "src": "1487:278:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3758,
              "nodeType": "Block",
              "src": "1810:188:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3737,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1828:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1828:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3739,
                          "name": "nocturnalFinanceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3699,
                          "src": "1842:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1828:37:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74204e6f637475726e616c2046696e616e6365",
                        "id": 3741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739",
                          "typeString": "literal_string \"not Nocturnal Finance\""
                        },
                        "value": "not Nocturnal Finance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739",
                          "typeString": "literal_string \"not Nocturnal Finance\""
                        }
                      ],
                      "id": 3736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1820:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:71:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3743,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1975:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 3751,
                            "name": "nocturnalFinance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3706,
                            "src": "1948:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                              "typeString": "contract NocturnalFinanceInterface"
                            }
                          },
                          "id": 3752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_contract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1188,
                          "src": "1948:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 3754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1948:29:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3755,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "1979:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3132",
                                "id": 3747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1935:2:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                },
                                "value": "12"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                }
                              ],
                              "expression": {
                                "id": 3745,
                                "name": "nocturnalFinance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "1908:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                  "typeString": "contract NocturnalFinanceInterface"
                                }
                              },
                              "id": 3746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_contract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "1908:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1908:30:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3744,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "1901:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4546_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1901:38:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4546",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4515,
                      "src": "1901:46:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:90:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3757,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:90:31"
                }
              ]
            },
            "functionSelector": "029a93e9",
            "id": 3759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveStaking",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:2:31"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:31"
            },
            "scope": 3851,
            "src": "1775:223:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "2089:54:31",
              "statements": [
                {
                  "expression": {
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3768,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2099:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3770,
                      "indexExpression": {
                        "id": 3769,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3761,
                        "src": "2115:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2099:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3771,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3763,
                      "src": "2128:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2099:37:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:37:31"
                }
              ]
            },
            "functionSelector": "44195034",
            "id": 3775,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3766,
                "modifierName": {
                  "id": 3765,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3910,
                  "src": "2079:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2079:9:31"
              }
            ],
            "name": "setClaimantBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3761,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2036:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3763,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2055:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2035:34:31"
            },
            "returnParameters": {
              "id": 3767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:0:31"
            },
            "scope": 3851,
            "src": "2008:135:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3813,
              "nodeType": "Block",
              "src": "2194:264:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3779,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3703,
                            "src": "2212:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3782,
                          "indexExpression": {
                            "expression": {
                              "id": 3780,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2228:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2228:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2212:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2212:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2204:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3787,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2350:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2350:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 3798,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3703,
                              "src": "2362:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3801,
                            "indexExpression": {
                              "expression": {
                                "id": 3799,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2378:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2378:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2362:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "3132",
                                    "id": 3792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2336:2:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3790,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3706,
                                    "src": "2309:16:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 3791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_contract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1188,
                                  "src": "2309:26:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 3793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2309:30:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3789,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "2295:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$1132_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 3794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2295:45:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$1132",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1074,
                          "src": "2295:54:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:95:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 3788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2287:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:123:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3805,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:123:31"
                },
                {
                  "expression": {
                    "id": 3811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3806,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2420:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3809,
                      "indexExpression": {
                        "expression": {
                          "id": 3807,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2436:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2436:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2420:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2450:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2420:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3812,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:31:31"
                }
              ]
            },
            "functionSelector": "1d6b34f7",
            "id": 3814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:2:31"
            },
            "returnParameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:0:31"
            },
            "scope": 3851,
            "src": "2153:305:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3849,
              "nodeType": "Block",
              "src": "2513:243:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3818,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3703,
                            "src": "2531:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3821,
                          "indexExpression": {
                            "expression": {
                              "id": 3819,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2547:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2547:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2531:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2561:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2531:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2523:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2523:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3826,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2668:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2668:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 3836,
                          "name": "treasuryBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3703,
                          "src": "2680:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3839,
                        "indexExpression": {
                          "expression": {
                            "id": 3837,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2696:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2696:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2680:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2654:1:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 3828,
                                "name": "nocturnalFinance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "2627:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                  "typeString": "contract NocturnalFinanceInterface"
                                }
                              },
                              "id": 3829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_contract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "2627:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2627:29:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3827,
                          "name": "NoctStakingInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "2606:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NoctStakingInterface_$1179_$",
                            "typeString": "type(contract NoctStakingInterface)"
                          }
                        },
                        "id": 3832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:51:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoctStakingInterface_$1179",
                          "typeString": "contract NoctStakingInterface"
                        }
                      },
                      "id": 3833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "autoStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "2606:61:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:102:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:102:31"
                },
                {
                  "expression": {
                    "id": 3847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3842,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2718:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3845,
                      "indexExpression": {
                        "expression": {
                          "id": 3843,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2734:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2734:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2718:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2748:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2718:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3848,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:31:31"
                }
              ]
            },
            "functionSelector": "b29c2ba8",
            "id": 3850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:31"
            },
            "returnParameters": {
              "id": 3816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:0:31"
            },
            "scope": 3851,
            "src": "2472:284:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3852,
        "src": "1238:1523:31"
      }
    ],
    "src": "820:1942:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        6238
      ],
      "IERC20": [
        4546
      ],
      "NoctInterface": [
        1132
      ],
      "NoctStakingInterface": [
        1179
      ],
      "NocturnalFinanceInterface": [
        1209
      ],
      "Ownable": [
        3961
      ],
      "SafeMath": [
        6850
      ],
      "Treasury": [
        3851
      ]
    },
    "id": 3852,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3682,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 6851,
        "src": "845:57:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3683,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 3962,
        "src": "903:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3684,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 4547,
        "src": "956:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 3686,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1210,
        "src": "1013:85:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3685,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1021:25:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 3688,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1133,
        "src": "1099:61:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3687,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1107:13:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctStakingInterface.sol",
        "file": "./Interfaces/NoctStakingInterface.sol",
        "id": 3690,
        "nodeType": "ImportDirective",
        "scope": 3852,
        "sourceUnit": 1180,
        "src": "1161:75:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3689,
              "name": "NoctStakingInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1169:20:31",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3691,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3961,
              "src": "1259:7:31"
            },
            "id": 3692,
            "nodeType": "InheritanceSpecifier",
            "src": "1259:7:31"
          }
        ],
        "contractDependencies": [
          3961,
          6238
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3851,
        "linearizedBaseContracts": [
          3851,
          3961,
          6238
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3695,
            "libraryName": {
              "id": 3693,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6850,
              "src": "1279:8:31"
            },
            "nodeType": "UsingForDirective",
            "src": "1273:27:31",
            "typeName": {
              "id": 3694,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3697,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1306:19:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1306:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3699,
            "mutability": "mutable",
            "name": "nocturnalFinanceAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1331:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3698,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3703,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1373:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3702,
              "keyType": {
                "id": 3700,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1381:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1373:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3701,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1392:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 3706,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 3851,
            "src": "1427:49:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 3705,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3704,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1209,
                "src": "1427:25:31"
              },
              "referencedDeclaration": 1209,
              "src": "1427:25:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3732,
              "nodeType": "Block",
              "src": "1574:191:31",
              "statements": [
                {
                  "expression": {
                    "id": 3720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3715,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "1584:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3718,
                          "name": "_initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3712,
                          "src": "1617:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3716,
                          "name": "_rewardsSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3710,
                          "src": "1598:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6714,
                        "src": "1598:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1598:34:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1584:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3721,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:48:31"
                },
                {
                  "expression": {
                    "id": 3724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3722,
                      "name": "nocturnalFinanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3699,
                      "src": "1642:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3723,
                      "name": "_nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3708,
                      "src": "1668:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1642:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3725,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:43:31"
                },
                {
                  "expression": {
                    "id": 3730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3726,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "1695:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3728,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3708,
                          "src": "1740:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3727,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "1714:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$1209_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:44:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1695:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 3731,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:63:31"
                }
              ]
            },
            "id": 3733,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3708,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1499:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3710,
                  "mutability": "mutable",
                  "name": "_rewardsSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1526:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3712,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "1550:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:75:31"
            },
            "returnParameters": {
              "id": 3714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1574:0:31"
            },
            "scope": 3851,
            "src": "1487:278:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3758,
              "nodeType": "Block",
              "src": "1810:188:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3737,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1828:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1828:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3739,
                          "name": "nocturnalFinanceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3699,
                          "src": "1842:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1828:37:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74204e6f637475726e616c2046696e616e6365",
                        "id": 3741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739",
                          "typeString": "literal_string \"not Nocturnal Finance\""
                        },
                        "value": "not Nocturnal Finance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db256a699167c4a1a6fbbea17b0e0607640d06b63ba49f05ea352f466479d739",
                          "typeString": "literal_string \"not Nocturnal Finance\""
                        }
                      ],
                      "id": 3736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1820:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:71:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3743,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1975:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 3751,
                            "name": "nocturnalFinance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3706,
                            "src": "1948:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                              "typeString": "contract NocturnalFinanceInterface"
                            }
                          },
                          "id": 3752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_contract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1188,
                          "src": "1948:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 3754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1948:29:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3755,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "1979:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3132",
                                "id": 3747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1935:2:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                },
                                "value": "12"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                }
                              ],
                              "expression": {
                                "id": 3745,
                                "name": "nocturnalFinance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "1908:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                  "typeString": "contract NocturnalFinanceInterface"
                                }
                              },
                              "id": 3746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_contract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "1908:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1908:30:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3744,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "1901:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4546_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1901:38:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4546",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4515,
                      "src": "1901:46:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:90:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3757,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:90:31"
                }
              ]
            },
            "functionSelector": "029a93e9",
            "id": 3759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveStaking",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:2:31"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:31"
            },
            "scope": 3851,
            "src": "1775:223:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "2089:54:31",
              "statements": [
                {
                  "expression": {
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3768,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2099:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3770,
                      "indexExpression": {
                        "id": 3769,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3761,
                        "src": "2115:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2099:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3771,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3763,
                      "src": "2128:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2099:37:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:37:31"
                }
              ]
            },
            "functionSelector": "44195034",
            "id": 3775,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3766,
                "modifierName": {
                  "id": 3765,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3910,
                  "src": "2079:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2079:9:31"
              }
            ],
            "name": "setClaimantBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3761,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2036:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3763,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2055:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2035:34:31"
            },
            "returnParameters": {
              "id": 3767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:0:31"
            },
            "scope": 3851,
            "src": "2008:135:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3813,
              "nodeType": "Block",
              "src": "2194:264:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3779,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3703,
                            "src": "2212:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3782,
                          "indexExpression": {
                            "expression": {
                              "id": 3780,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2228:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2228:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2212:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2212:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2204:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3787,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2350:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2350:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 3798,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3703,
                              "src": "2362:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3801,
                            "indexExpression": {
                              "expression": {
                                "id": 3799,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2378:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2378:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2362:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "3132",
                                    "id": 3792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2336:2:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3790,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3706,
                                    "src": "2309:16:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 3791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_contract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1188,
                                  "src": "2309:26:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 3793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2309:30:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3789,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "2295:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$1132_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 3794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2295:45:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$1132",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1074,
                          "src": "2295:54:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:95:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 3788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2287:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:123:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3805,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:123:31"
                },
                {
                  "expression": {
                    "id": 3811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3806,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2420:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3809,
                      "indexExpression": {
                        "expression": {
                          "id": 3807,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2436:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2436:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2420:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2450:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2420:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3812,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:31:31"
                }
              ]
            },
            "functionSelector": "1d6b34f7",
            "id": 3814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:2:31"
            },
            "returnParameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:0:31"
            },
            "scope": 3851,
            "src": "2153:305:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3849,
              "nodeType": "Block",
              "src": "2513:243:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3818,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3703,
                            "src": "2531:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3821,
                          "indexExpression": {
                            "expression": {
                              "id": 3819,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2547:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2547:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2531:27:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2561:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2531:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742074726561737572792062616c616e6365",
                        "id": 3824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        },
                        "value": "insufficient treasury balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ab60e7029747cf0d92111706405a7b34c41b022fb149515914c09483ae41b4",
                          "typeString": "literal_string \"insufficient treasury balance\""
                        }
                      ],
                      "id": 3817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2523:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2523:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3826,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:73:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2668:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2668:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 3836,
                          "name": "treasuryBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3703,
                          "src": "2680:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3839,
                        "indexExpression": {
                          "expression": {
                            "id": 3837,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2696:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2696:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2680:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2654:1:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 3828,
                                "name": "nocturnalFinance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "2627:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$1209",
                                  "typeString": "contract NocturnalFinanceInterface"
                                }
                              },
                              "id": 3829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_contract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "2627:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 3831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2627:29:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3827,
                          "name": "NoctStakingInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "2606:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NoctStakingInterface_$1179_$",
                            "typeString": "type(contract NoctStakingInterface)"
                          }
                        },
                        "id": 3832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:51:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoctStakingInterface_$1179",
                          "typeString": "contract NoctStakingInterface"
                        }
                      },
                      "id": 3833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "autoStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "2606:61:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:102:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:102:31"
                },
                {
                  "expression": {
                    "id": 3847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3842,
                        "name": "treasuryBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "2718:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3845,
                      "indexExpression": {
                        "expression": {
                          "id": 3843,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2734:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2734:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2718:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2748:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2718:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3848,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:31:31"
                }
              ]
            },
            "functionSelector": "b29c2ba8",
            "id": 3850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTreasuryBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:31"
            },
            "returnParameters": {
              "id": 3816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:0:31"
            },
            "scope": 3851,
            "src": "2472:284:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3852,
        "src": "1238:1523:31"
      }
    ],
    "src": "820:1942:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "50": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x325c0B5b979bfec91e257D45B1C0e298108294bc",
      "transactionHash": "0x2450333be44507e0c320bf55abc8a5fed7cb798dd87ea9ee1298312bf6aca700"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-06-13T20:49:23.740Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}