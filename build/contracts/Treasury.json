{
  "contractName": "Treasury",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nocturnalFinance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nocturnalFinance",
      "outputs": [
        {
          "internalType": "contract NocturnalFinanceInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "transferTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimant",
          "type": "address"
        }
      ],
      "name": "addTreasuryClaimant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_factorBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setClaimantFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTreasuryRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nocturnalFinance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimant\",\"type\":\"address\"}],\"name\":\"addTreasuryClaimant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTreasuryRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nocturnalFinance\",\"outputs\":[{\"internalType\":\"contract NocturnalFinanceInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_factorBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setClaimantFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"transferTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol\":{\"keccak256\":\"0xe8dee75492ef7ee2e89c85451fa2262491b7de3aca8c3caeb19420fa35931486\",\"urls\":[\"bzz-raw://f775dc9eccec00cfd161c029fad813f4a12162a50eb8a928bf85e7a5c6bee7db\",\"dweb:/ipfs/QmTX6gJsEP1gHJS1tDGVWC4D2HxpxzJK4EfNJwHGD5nUfE\"]},\"/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol\":{\"keccak256\":\"0xfa1826eb0867f4432e43c1fff16975357432c7b273aaa8ea5ef008f62c465519\",\"urls\":[\"bzz-raw://3c08488afd09ed5c3a8858c605506b6459928de7b0e3c85c4e8a6f1e66938f82\",\"dweb:/ipfs/QmZNk5Bye4B56fczaGRVisaQxaUjRxTQ4ST7dUtaLLp3wm\"]},\"/Users/knott/Desktop/nocturnal/contracts/Treasury.sol\":{\"keccak256\":\"0x419474619d4cc649184d20aba90005f770cead83a75d32db45912f693eafc521\",\"urls\":[\"bzz-raw://2493f44868a57ac836718991cc2efe8b01f4fd893c46e5e4dfd94d9b06980dac\",\"dweb:/ipfs/QmUqSWNB9kqzZXSbo97xhbcYdWmn6wTATAAE2392FCizLj\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d38380380610d3883398101604081905261002f916100ac565b60006100396100a8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319166001600160a01b03929092169190911790556100da565b3390565b6000602082840312156100bd578081fd5b81516001600160a01b03811681146100d3578182fd5b9392505050565b610c4f806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd0299f71161005b578063bd0299f7146100d0578063d8a6021c146100e3578063ee64deab146100f6578063f2fde38b146100fe57610088565b806305c4744b1461008d5780634f4bee4914610097578063715018a6146100aa5780638da5cb5b146100b2575b600080fd5b610095610111565b005b6100956100a53660046109d7565b61033e565b6100956103d1565b6100ba6104b3565b6040516100c79190610a79565b60405180910390f35b6100956100de366004610a16565b6104cf565b6100956100f13660046109d7565b61056b565b6100ba61086a565b61009561010c3660046109d7565b610886565b3360009081526001602081905260409091205460ff16151514610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b1d565b60405180910390fd5b336000908152600260205260409020546101af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b89565b60048054604080517f1d1d929b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921692631d1d929b928282019260209290829003018186803b15801561021757600080fd5b505afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f91906109fa565b33600081815260026020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb926102b4929091600401610a9a565b602060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610a41565b61033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610bc0565b565b6103466109d3565b73ffffffffffffffffffffffffffffffffffffffff166103646104b3565b73ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052565b6103d96109d3565b73ffffffffffffffffffffffffffffffffffffffff166103f76104b3565b73ffffffffffffffffffffffffffffffffffffffff1614610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6104d76109d3565b73ffffffffffffffffffffffffffffffffffffffff166104f56104b3565b73ffffffffffffffffffffffffffffffffffffffff1614610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260036020526040902055565b6105736109d3565b73ffffffffffffffffffffffffffffffffffffffff166105916104b3565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b60048054604080517f1d1d929b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921692631d1d929b928282019260209290829003018186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e91906109fa565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d1d929b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906109fa565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107729190610a79565b60206040518083038186803b15801561078a57600080fd5b505afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190610a61565b6040518363ffffffff1660e01b81526004016107df929190610a9a565b602060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190610a41565b610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610bc0565b50565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b61088e6109d3565b73ffffffffffffffffffffffffffffffffffffffff166108ac6104b3565b73ffffffffffffffffffffffffffffffffffffffff16146108f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff8116610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610ac0565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b6000602082840312156109e8578081fd5b81356109f381610bf7565b9392505050565b600060208284031215610a0b578081fd5b81516109f381610bf7565b60008060408385031215610a28578081fd5b8235610a3381610bf7565b946020939093013593505050565b600060208284031215610a52578081fd5b815180151581146109f3578182fd5b600060208284031215610a72578081fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f6e6f74206120747265617375727920636c61696d616e74206164647265737300604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f6e6f20747265617375727920726577617264732062616c616e63650000000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff8116811461086757600080fdfea2646970667358221220e8badb3416e18fd015669b7c5882b2f226444c4025faec4d4602f4411a56d35964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd0299f71161005b578063bd0299f7146100d0578063d8a6021c146100e3578063ee64deab146100f6578063f2fde38b146100fe57610088565b806305c4744b1461008d5780634f4bee4914610097578063715018a6146100aa5780638da5cb5b146100b2575b600080fd5b610095610111565b005b6100956100a53660046109d7565b61033e565b6100956103d1565b6100ba6104b3565b6040516100c79190610a79565b60405180910390f35b6100956100de366004610a16565b6104cf565b6100956100f13660046109d7565b61056b565b6100ba61086a565b61009561010c3660046109d7565b610886565b3360009081526001602081905260409091205460ff16151514610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b1d565b60405180910390fd5b336000908152600260205260409020546101af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b89565b60048054604080517f1d1d929b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921692631d1d929b928282019260209290829003018186803b15801561021757600080fd5b505afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f91906109fa565b33600081815260026020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a9059cbb926102b4929091600401610a9a565b602060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610a41565b61033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610bc0565b565b6103466109d3565b73ffffffffffffffffffffffffffffffffffffffff166103646104b3565b73ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052565b6103d96109d3565b73ffffffffffffffffffffffffffffffffffffffff166103f76104b3565b73ffffffffffffffffffffffffffffffffffffffff1614610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6104d76109d3565b73ffffffffffffffffffffffffffffffffffffffff166104f56104b3565b73ffffffffffffffffffffffffffffffffffffffff1614610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff909116600090815260036020526040902055565b6105736109d3565b73ffffffffffffffffffffffffffffffffffffffff166105916104b3565b73ffffffffffffffffffffffffffffffffffffffff16146105de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b60048054604080517f1d1d929b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921692631d1d929b928282019260209290829003018186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e91906109fa565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d1d929b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906109fa565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107729190610a79565b60206040518083038186803b15801561078a57600080fd5b505afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190610a61565b6040518363ffffffff1660e01b81526004016107df929190610a9a565b602060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190610a41565b610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610bc0565b50565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b61088e6109d3565b73ffffffffffffffffffffffffffffffffffffffff166108ac6104b3565b73ffffffffffffffffffffffffffffffffffffffff16146108f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610b54565b73ffffffffffffffffffffffffffffffffffffffff8116610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610ac0565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b6000602082840312156109e8578081fd5b81356109f381610bf7565b9392505050565b600060208284031215610a0b578081fd5b81516109f381610bf7565b60008060408385031215610a28578081fd5b8235610a3381610bf7565b946020939093013593505050565b600060208284031215610a52578081fd5b815180151581146109f3578182fd5b600060208284031215610a72578081fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f6e6f74206120747265617375727920636c61696d616e74206164647265737300604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f6e6f20747265617375727920726577617264732062616c616e63650000000000604082015260600190565b6020808252600f908201527f7472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff8116811461086757600080fdfea2646970667358221220e8badb3416e18fd015669b7c5882b2f226444c4025faec4d4602f4411a56d35964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:65",
                "type": ""
              }
            ],
            "src": "14:310:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4162:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:65",
                "type": ""
              }
            ],
            "src": "14:259:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:65",
                "type": ""
              }
            ],
            "src": "278:263:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:240:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "679:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "688:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "696:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "681:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "681:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "681:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "654:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "663:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "643:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "727:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "718:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "786:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "759:26:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:33:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "759:33:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "801:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "811:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "825:42:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "863:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "848:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "848:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "835:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "591:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "602:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "614:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "622:6:65",
                "type": ""
              }
            ],
            "src": "546:327:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:219:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1004:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "966:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1037:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1050:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:16:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1041:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1119:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1128:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1136:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1121:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1121:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1088:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1109:5:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1102:13:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1095:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1095:21:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1085:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1078:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:40:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1075:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1154:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1164:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "933:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:65",
                "type": ""
              }
            ],
            "src": "878:297:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1261:113:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1307:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1316:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1324:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1309:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1309:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1309:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1282:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1291:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1278:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1274:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1271:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1342:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1358:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1352:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:16:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1227:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1238:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1250:6:65",
                "type": ""
              }
            ],
            "src": "1180:194:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1480:125:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1490:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1502:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1513:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1498:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1490:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1532:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1547:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1555:42:65",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1543:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1543:55:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1525:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:74:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:74:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1449:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1460:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1471:4:65",
                "type": ""
              }
            ],
            "src": "1379:226:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:168:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1749:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1761:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1772:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1757:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1749:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1791:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1806:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1814:42:65",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1802:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1802:55:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1784:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:74:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1784:74:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1878:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1889:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1874:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1874:18:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1894:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1867:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1867:34:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1700:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1711:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1719:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1730:4:65",
                "type": ""
              }
            ],
            "src": "1610:297:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2046:125:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2056:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2068:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2079:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2064:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2056:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2098:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2113:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2121:42:65",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2109:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:55:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2091:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2091:74:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2091:74:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$205__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2015:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2026:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2037:4:65",
                "type": ""
              }
            ],
            "src": "1912:259:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2350:228:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2367:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2378:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2360:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2360:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2360:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2401:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2412:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2397:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2397:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2417:2:65",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2390:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2390:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2440:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2451:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2436:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2436:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2456:34:65",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2429:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2429:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2511:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2522:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2507:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2507:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2527:8:65",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2500:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2500:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2500:36:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2545:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2557:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2553:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2545:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2327:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2341:4:65",
                "type": ""
              }
            ],
            "src": "2176:402:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2757:181:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2785:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2767:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2767:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2808:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2819:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2804:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2804:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2797:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2797:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2797:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2863:33:65",
                        "type": "",
                        "value": "not a treasury claimant address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2836:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:61:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:61:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2906:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2918:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2929:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2914:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2914:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2906:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2734:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2748:4:65",
                "type": ""
              }
            ],
            "src": "2583:355:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3117:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3134:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3145:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3127:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3127:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3127:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3168:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3179:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3164:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3164:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3184:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3207:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3218:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3203:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3203:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3223:34:65",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3196:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3267:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3279:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3275:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3275:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3267:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3094:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3108:4:65",
                "type": ""
              }
            ],
            "src": "2943:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3478:177:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3495:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3506:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3488:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3488:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3488:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3529:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3540:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3525:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3525:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3545:2:65",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3518:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3518:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3518:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3568:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3579:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3564:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3564:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3584:29:65",
                        "type": "",
                        "value": "no treasury rewards balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3557:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3557:57:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3557:57:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3623:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3646:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3631:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3623:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3455:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3469:4:65",
                "type": ""
              }
            ],
            "src": "3304:351:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3834:165:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3851:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3862:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3844:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3844:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3885:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3896:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3881:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3881:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3901:2:65",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3874:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3874:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3874:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3924:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3935:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3920:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3920:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3940:17:65",
                        "type": "",
                        "value": "transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3913:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3913:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3913:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3967:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3979:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3975:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3967:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3811:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3825:4:65",
                "type": ""
              }
            ],
            "src": "3660:339:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4051:109:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4138:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4147:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4150:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4140:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4140:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4140:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4074:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4085:5:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4092:42:65",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4081:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4081:54:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4071:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4071:65:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4064:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:73:65"
                  },
                  "nodeType": "YulIf",
                  "src": "4061:2:65"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4040:5:65",
                "type": ""
              }
            ],
            "src": "4004:156:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_NocturnalFinanceInterface_$205__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"not a treasury claimant address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"no treasury rewards balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1106:1495:28:-:0;;;1564:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:41;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:41;-1:-1:-1;;;;;909:18:41;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:41;942:43;;909:6;;942:43;-1:-1:-1;1613:16:28;:63;;-1:-1:-1;;;;;;1613:63:28;-1:-1:-1;;;;;1613:63:28;;;;;;;;;;1106:1495;;586:96:49;665:10;586:96;:::o;14:310:65:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:65;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:65:o;:::-;1106:1495:28;;;;;;",
  "deployedSourceMap": "1106:1495:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:352;;;:::i;:::-;;1951:119;;;;;;:::i;:::-;;:::i;1700:145:41:-;;;:::i;1068:85::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:153:28;;;;;;:::i;:::-;;:::i;1693:248::-;;;;;;:::i;:::-;;:::i;1504:49::-;;;:::i;1994:240:41:-;;;;;;:::i;:::-;;:::i;2243:352:28:-;2319:10;2302:28;;;;:16;:28;;;;;;;;;;;:36;;;2294:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2408:10;2422:1;2392:27;;;:15;:27;;;;;;2384:71;;;;;;;;;;;;:::i;:::-;2487:16;;;:30;;;;;;;;:16;;;;;:28;;:30;;;;;;;;;;;;:16;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2528:10;2540:27;;;;:15;:27;;;;;;;;2473:95;;;;;:54;;;;;;;;:95;;2528:10;;2473:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2465:123;;;;;;;;;;;;:::i;:::-;2243:352::o;1951:119::-;1291:12:41;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2028:27:28::1;;;::::0;:16:::1;:27;::::0;1951:119::o;1700:145:41:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;::::1;1790:6:::0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;;;1068:85;:::o;2080:153:28:-;1291:12:41;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2180:25:28::1;::::0;;::::1;;::::0;;;:14:::1;:25;::::0;;;;:46;2080:153::o;1693:248::-;1291:12:41;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;1790:16:28::1;::::0;;:30:::1;::::0;;;;;;;:16:::1;::::0;;::::1;::::0;:28:::1;::::0;:30;;::::1;::::0;::::1;::::0;;;;;;;:16;:30;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1776:54;;;1831:10;1857:16;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:55;;;1907:4;1843:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1776:138;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1768:166;;;;;;;;;;;;:::i;:::-;1693:248:::0;:::o;1504:49::-;;;;;;:::o;1994:240:41:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;2082:22:::1;::::0;::::1;2074:73;;;;;;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;::::1;::::0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:49:-;665:10;586:96;:::o;14:259:65:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:65:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:327::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;863:2;848:18;;;;835:32;;-1:-1:-1;;;633:240:65:o;878:297::-;;998:2;986:9;977:7;973:23;969:32;966:2;;;1019:6;1011;1004:22;966:2;1056:9;1050:16;1109:5;1102:13;1095:21;1088:5;1085:32;1075:2;;1136:6;1128;1121:22;1180:194;;1303:2;1291:9;1282:7;1278:23;1274:32;1271:2;;;1324:6;1316;1309:22;1271:2;-1:-1:-1;1352:16:65;;1261:113;-1:-1:-1;1261:113:65:o;1379:226::-;1555:42;1543:55;;;;1525:74;;1513:2;1498:18;;1480:125::o;1610:297::-;1814:42;1802:55;;;;1784:74;;1889:2;1874:18;;1867:34;1772:2;1757:18;;1739:168::o;2176:402::-;2378:2;2360:21;;;2417:2;2397:18;;;2390:30;2456:34;2451:2;2436:18;;2429:62;2527:8;2522:2;2507:18;;2500:36;2568:3;2553:19;;2350:228::o;2583:355::-;2785:2;2767:21;;;2824:2;2804:18;;;2797:30;2863:33;2858:2;2843:18;;2836:61;2929:2;2914:18;;2757:181::o;2943:356::-;3145:2;3127:21;;;3164:18;;;3157:30;3223:34;3218:2;3203:18;;3196:62;3290:2;3275:18;;3117:182::o;3304:351::-;3506:2;3488:21;;;3545:2;3525:18;;;3518:30;3584:29;3579:2;3564:18;;3557:57;3646:2;3631:18;;3478:177::o;3660:339::-;3862:2;3844:21;;;3901:2;3881:18;;;3874:30;3940:17;3935:2;3920:18;;3913:45;3990:2;3975:18;;3834:165::o;4004:156::-;4092:42;4085:5;4081:54;4074:5;4071:65;4061:2;;4150:1;4147;4140:12",
  "source": "/*                              $$\\                                             $$\\                                                         \n                                $$ |                                            $$ |                                                  \n$$$$$$$\\   $$$$$$\\   $$$$$$$\\ $$$$$$\\   $$\\   $$\\  $$$$$$\\  $$$$$$$\\   $$$$$$\\  $$ |     \n$$  __$$\\ $$  __$$\\ $$  _____|\\_$$  _|  $$ |  $$ |$$  __$$\\ $$  __$$\\  \\____$$\\ $$ |    \n$$ |  $$ |$$ /  $$ |$$ /        $$ |    $$ |  $$ |$$ |  \\__|$$ |  $$ | $$$$$$$ |$$ |     \n$$ |  $$ |$$ |  $$ |$$ |        $$ |$$\\ $$ |  $$ |$$ |      $$ |  $$ |$$  __$$ |$$ |     \n$$ |  $$ |\\$$$$$$  |\\$$$$$$$\\   \\$$$$  |\\$$$$$$  |$$ |      $$ |  $$ |\\$$$$$$$ |$$ |      \n\\__|  \\__| \\______/  \\_______|   \\____/  \\______/ \\__|      \\__|  \\__| \\_______|\\__|     \n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {NocturnalFinanceInterface} from \"./Interfaces/NocturnalFinanceInterface.sol\";\nimport {NoctInterface} from \"./Interfaces/NoctInterface.sol\";\n\ncontract Treasury is Ownable {\n    using SafeMath for uint256;\n\n    mapping(address => bool) treasuryClaimant; // addresses with treasury allocation\n    mapping(address => uint256) treasuryBalance; // current balance considering treasury allocation (need mechanism similar to NoctStaking.sol)\n    mapping(address => uint256) treasuryFactor; // percentage of treasury allocated to claimant\n    \n    NocturnalFinanceInterface public nocturnalFinance;\n    \n    constructor(address _nocturnalFinance) {\n        nocturnalFinance = NocturnalFinanceInterface(_nocturnalFinance);\n    }\n    \n    function transferTreasury(address _recipient) external onlyOwner {\n        require(NoctInterface(nocturnalFinance.noctAddress()).transfer(_recipient, NoctInterface(nocturnalFinance.noctAddress()).balanceOf(address(this))), \"transfer failed\");\n    }\n    \n    function addTreasuryClaimant(address _claimant) external onlyOwner {\n        treasuryClaimant[_claimant] == true;\n    }\n    \n    function setClaimantFactor(address _claimant, uint _factorBasisPoints) external onlyOwner {\n        treasuryFactor[_claimant] = _factorBasisPoints;\n    }\n    \n    function claimTreasuryRewards() external {\n        require(treasuryClaimant[msg.sender] == true, \"not a treasury claimant address\");\n        require(treasuryBalance[msg.sender] > 0, \"no treasury rewards balance\");\n        require(NoctInterface(nocturnalFinance.noctAddress()).transfer(msg.sender, treasuryBalance[msg.sender]), \"transfer failed\");\n    }    \n}\n",
  "sourcePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
  "ast": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        7930
      ],
      "NoctInterface": [
        80
      ],
      "NocturnalFinanceInterface": [
        205
      ],
      "Ownable": [
        6840
      ],
      "SafeMath": [
        8542
      ],
      "Treasury": [
        5962
      ]
    },
    "id": 5963,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5821,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5822,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 8543,
        "src": "845:57:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5823,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 6841,
        "src": "903:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 5825,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 206,
        "src": "957:85:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5824,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "965:25:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 5827,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 81,
        "src": "1043:61:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5826,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1051:13:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5828,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6840,
              "src": "1127:7:28"
            },
            "id": 5829,
            "nodeType": "InheritanceSpecifier",
            "src": "1127:7:28"
          }
        ],
        "contractDependencies": [
          6840,
          7930
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5962,
        "linearizedBaseContracts": [
          5962,
          6840,
          7930
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5832,
            "libraryName": {
              "id": 5830,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8542,
              "src": "1147:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1141:27:28",
            "typeName": {
              "id": 5831,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1160:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 5836,
            "mutability": "mutable",
            "name": "treasuryClaimant",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1174:41:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5835,
              "keyType": {
                "id": 5833,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1182:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1174:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5834,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1193:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5840,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1259:43:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5839,
              "keyType": {
                "id": 5837,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1267:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1259:27:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5838,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5844,
            "mutability": "mutable",
            "name": "treasuryFactor",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1403:42:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5843,
              "keyType": {
                "id": 5841,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1411:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1403:27:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5842,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1422:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 5847,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1504:49:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 5846,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5845,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 205,
                "src": "1504:25:28"
              },
              "referencedDeclaration": 205,
              "src": "1504:25:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5858,
              "nodeType": "Block",
              "src": "1603:80:28",
              "statements": [
                {
                  "expression": {
                    "id": 5856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5852,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5847,
                      "src": "1613:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5854,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5849,
                          "src": "1658:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5853,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1632:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$205_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 5855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1632:44:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1613:63:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 5857,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:63:28"
                }
              ]
            },
            "id": 5859,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5849,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "1576:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:27:28"
            },
            "returnParameters": {
              "id": 5851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:0:28"
            },
            "scope": 5962,
            "src": "1564:119:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5889,
              "nodeType": "Block",
              "src": "1758:183:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5873,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5861,
                            "src": "1831:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 5882,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1907:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Treasury_$5962",
                                      "typeString": "contract Treasury"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Treasury_$5962",
                                      "typeString": "contract Treasury"
                                    }
                                  ],
                                  "id": 5881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1899:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 5880,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1899:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 5883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1899:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 5875,
                                        "name": "nocturnalFinance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5847,
                                        "src": "1857:16:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                          "typeString": "contract NocturnalFinanceInterface"
                                        }
                                      },
                                      "id": 5876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "noctAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 179,
                                      "src": "1857:28:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 5877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1857:30:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5874,
                                  "name": "NoctInterface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "1843:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                    "typeString": "type(contract NoctInterface)"
                                  }
                                },
                                "id": 5878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1843:45:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NoctInterface_$80",
                                  "typeString": "contract NoctInterface"
                                }
                              },
                              "id": 5879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "1843:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 5884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1843:70:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 5868,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5847,
                                    "src": "1790:16:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 5869,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "noctAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 179,
                                  "src": "1790:28:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 5870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1790:30:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5867,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1776:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 5871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1776:45:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$80",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 5872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "1776:54:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:138:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 5886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1916:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 5866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1768:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:166:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5888,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:166:28"
                }
              ]
            },
            "functionSelector": "d8a6021c",
            "id": 5890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5864,
                "modifierName": {
                  "id": 5863,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "1748:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1748:9:28"
              }
            ],
            "name": "transferTreasury",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5890,
                  "src": "1719:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1718:20:28"
            },
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:0:28"
            },
            "scope": 5962,
            "src": "1693:248:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5903,
              "nodeType": "Block",
              "src": "2018:52:28",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5897,
                        "name": "treasuryClaimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "2028:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5899,
                      "indexExpression": {
                        "id": 5898,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5892,
                        "src": "2045:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2028:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 5900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2059:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2028:35:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5902,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:35:28"
                }
              ]
            },
            "functionSelector": "4f4bee49",
            "id": 5904,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5895,
                "modifierName": {
                  "id": 5894,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "2008:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2008:9:28"
              }
            ],
            "name": "addTreasuryClaimant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5892,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 5904,
                  "src": "1980:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:19:28"
            },
            "returnParameters": {
              "id": 5896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:0:28"
            },
            "scope": 5962,
            "src": "1951:119:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5919,
              "nodeType": "Block",
              "src": "2170:63:28",
              "statements": [
                {
                  "expression": {
                    "id": 5917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5913,
                        "name": "treasuryFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5844,
                        "src": "2180:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5915,
                      "indexExpression": {
                        "id": 5914,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "2195:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2180:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5916,
                      "name": "_factorBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5908,
                      "src": "2208:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2180:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5918,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:46:28"
                }
              ]
            },
            "functionSelector": "bd0299f7",
            "id": 5920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5911,
                "modifierName": {
                  "id": 5910,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "2160:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2160:9:28"
              }
            ],
            "name": "setClaimantFactor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5906,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "2107:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "_factorBasisPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "2126:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:44:28"
            },
            "returnParameters": {
              "id": 5912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:28"
            },
            "scope": 5962,
            "src": "2080:153:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5960,
              "nodeType": "Block",
              "src": "2284:311:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5924,
                            "name": "treasuryClaimant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5836,
                            "src": "2302:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5927,
                          "indexExpression": {
                            "expression": {
                              "id": 5925,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2319:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2319:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2302:28:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 5928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2334:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2302:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206120747265617375727920636c61696d616e742061646472657373",
                        "id": 5930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2340:33:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a",
                          "typeString": "literal_string \"not a treasury claimant address\""
                        },
                        "value": "not a treasury claimant address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a",
                          "typeString": "literal_string \"not a treasury claimant address\""
                        }
                      ],
                      "id": 5923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2294:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5932,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:80:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5934,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5840,
                            "src": "2392:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5937,
                          "indexExpression": {
                            "expression": {
                              "id": 5935,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2408:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2408:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2392:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2422:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2392:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20747265617375727920726577617264732062616c616e6365",
                        "id": 5940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2425:29:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6",
                          "typeString": "literal_string \"no treasury rewards balance\""
                        },
                        "value": "no treasury rewards balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6",
                          "typeString": "literal_string \"no treasury rewards balance\""
                        }
                      ],
                      "id": 5933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2384:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5942,
                  "nodeType": "ExpressionStatement",
                  "src": "2384:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5950,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2528:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2528:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5952,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5840,
                              "src": "2540:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 5955,
                            "indexExpression": {
                              "expression": {
                                "id": 5953,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2556:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2556:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2540:27:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 5945,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5847,
                                    "src": "2487:16:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 5946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "noctAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 179,
                                  "src": "2487:28:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 5947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2487:30:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5944,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "2473:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 5948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2473:45:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$80",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 5949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2473:54:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2473:95:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 5957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2570:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 5943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2465:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:123:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5959,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:123:28"
                }
              ]
            },
            "functionSelector": "05c4744b",
            "id": 5961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2272:2:28"
            },
            "returnParameters": {
              "id": 5922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2284:0:28"
            },
            "scope": 5962,
            "src": "2243:352:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5963,
        "src": "1106:1495:28"
      }
    ],
    "src": "820:1782:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Treasury.sol",
    "exportedSymbols": {
      "Context": [
        7930
      ],
      "NoctInterface": [
        80
      ],
      "NocturnalFinanceInterface": [
        205
      ],
      "Ownable": [
        6840
      ],
      "SafeMath": [
        8542
      ],
      "Treasury": [
        5962
      ]
    },
    "id": 5963,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5821,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "820:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5822,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 8543,
        "src": "845:57:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5823,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 6841,
        "src": "903:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NocturnalFinanceInterface.sol",
        "file": "./Interfaces/NocturnalFinanceInterface.sol",
        "id": 5825,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 206,
        "src": "957:85:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5824,
              "name": "NocturnalFinanceInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "965:25:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/knott/Desktop/nocturnal/contracts/Interfaces/NoctInterface.sol",
        "file": "./Interfaces/NoctInterface.sol",
        "id": 5827,
        "nodeType": "ImportDirective",
        "scope": 5963,
        "sourceUnit": 81,
        "src": "1043:61:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5826,
              "name": "NoctInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1051:13:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5828,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6840,
              "src": "1127:7:28"
            },
            "id": 5829,
            "nodeType": "InheritanceSpecifier",
            "src": "1127:7:28"
          }
        ],
        "contractDependencies": [
          6840,
          7930
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5962,
        "linearizedBaseContracts": [
          5962,
          6840,
          7930
        ],
        "name": "Treasury",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5832,
            "libraryName": {
              "id": 5830,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8542,
              "src": "1147:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1141:27:28",
            "typeName": {
              "id": 5831,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1160:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 5836,
            "mutability": "mutable",
            "name": "treasuryClaimant",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1174:41:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5835,
              "keyType": {
                "id": 5833,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1182:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1174:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5834,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1193:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5840,
            "mutability": "mutable",
            "name": "treasuryBalance",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1259:43:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5839,
              "keyType": {
                "id": 5837,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1267:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1259:27:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5838,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5844,
            "mutability": "mutable",
            "name": "treasuryFactor",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1403:42:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5843,
              "keyType": {
                "id": 5841,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1411:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1403:27:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5842,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1422:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ee64deab",
            "id": 5847,
            "mutability": "mutable",
            "name": "nocturnalFinance",
            "nodeType": "VariableDeclaration",
            "scope": 5962,
            "src": "1504:49:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
              "typeString": "contract NocturnalFinanceInterface"
            },
            "typeName": {
              "id": 5846,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5845,
                "name": "NocturnalFinanceInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 205,
                "src": "1504:25:28"
              },
              "referencedDeclaration": 205,
              "src": "1504:25:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                "typeString": "contract NocturnalFinanceInterface"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5858,
              "nodeType": "Block",
              "src": "1603:80:28",
              "statements": [
                {
                  "expression": {
                    "id": 5856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5852,
                      "name": "nocturnalFinance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5847,
                      "src": "1613:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5854,
                          "name": "_nocturnalFinance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5849,
                          "src": "1658:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5853,
                        "name": "NocturnalFinanceInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1632:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NocturnalFinanceInterface_$205_$",
                          "typeString": "type(contract NocturnalFinanceInterface)"
                        }
                      },
                      "id": 5855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1632:44:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                        "typeString": "contract NocturnalFinanceInterface"
                      }
                    },
                    "src": "1613:63:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                      "typeString": "contract NocturnalFinanceInterface"
                    }
                  },
                  "id": 5857,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:63:28"
                }
              ]
            },
            "id": 5859,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5849,
                  "mutability": "mutable",
                  "name": "_nocturnalFinance",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "1576:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:27:28"
            },
            "returnParameters": {
              "id": 5851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:0:28"
            },
            "scope": 5962,
            "src": "1564:119:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5889,
              "nodeType": "Block",
              "src": "1758:183:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5873,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5861,
                            "src": "1831:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 5882,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1907:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Treasury_$5962",
                                      "typeString": "contract Treasury"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Treasury_$5962",
                                      "typeString": "contract Treasury"
                                    }
                                  ],
                                  "id": 5881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1899:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 5880,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1899:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 5883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1899:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 5875,
                                        "name": "nocturnalFinance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5847,
                                        "src": "1857:16:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                          "typeString": "contract NocturnalFinanceInterface"
                                        }
                                      },
                                      "id": 5876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "noctAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 179,
                                      "src": "1857:28:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 5877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1857:30:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5874,
                                  "name": "NoctInterface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "1843:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                    "typeString": "type(contract NoctInterface)"
                                  }
                                },
                                "id": 5878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1843:45:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NoctInterface_$80",
                                  "typeString": "contract NoctInterface"
                                }
                              },
                              "id": 5879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13,
                              "src": "1843:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 5884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1843:70:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 5868,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5847,
                                    "src": "1790:16:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 5869,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "noctAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 179,
                                  "src": "1790:28:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 5870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1790:30:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5867,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1776:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 5871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1776:45:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$80",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 5872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "1776:54:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:138:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 5886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1916:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 5866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1768:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:166:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5888,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:166:28"
                }
              ]
            },
            "functionSelector": "d8a6021c",
            "id": 5890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5864,
                "modifierName": {
                  "id": 5863,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "1748:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1748:9:28"
              }
            ],
            "name": "transferTreasury",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5890,
                  "src": "1719:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1718:20:28"
            },
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:0:28"
            },
            "scope": 5962,
            "src": "1693:248:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5903,
              "nodeType": "Block",
              "src": "2018:52:28",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5897,
                        "name": "treasuryClaimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "2028:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5899,
                      "indexExpression": {
                        "id": 5898,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5892,
                        "src": "2045:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2028:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 5900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2059:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2028:35:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5902,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:35:28"
                }
              ]
            },
            "functionSelector": "4f4bee49",
            "id": 5904,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5895,
                "modifierName": {
                  "id": 5894,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "2008:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2008:9:28"
              }
            ],
            "name": "addTreasuryClaimant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5892,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 5904,
                  "src": "1980:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:19:28"
            },
            "returnParameters": {
              "id": 5896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:0:28"
            },
            "scope": 5962,
            "src": "1951:119:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5919,
              "nodeType": "Block",
              "src": "2170:63:28",
              "statements": [
                {
                  "expression": {
                    "id": 5917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5913,
                        "name": "treasuryFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5844,
                        "src": "2180:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5915,
                      "indexExpression": {
                        "id": 5914,
                        "name": "_claimant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "2195:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2180:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5916,
                      "name": "_factorBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5908,
                      "src": "2208:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2180:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5918,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:46:28"
                }
              ]
            },
            "functionSelector": "bd0299f7",
            "id": 5920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5911,
                "modifierName": {
                  "id": 5910,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6789,
                  "src": "2160:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2160:9:28"
              }
            ],
            "name": "setClaimantFactor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5906,
                  "mutability": "mutable",
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "2107:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "_factorBasisPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "2126:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:44:28"
            },
            "returnParameters": {
              "id": 5912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:28"
            },
            "scope": 5962,
            "src": "2080:153:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5960,
              "nodeType": "Block",
              "src": "2284:311:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5924,
                            "name": "treasuryClaimant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5836,
                            "src": "2302:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5927,
                          "indexExpression": {
                            "expression": {
                              "id": 5925,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2319:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2319:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2302:28:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 5928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2334:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2302:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206120747265617375727920636c61696d616e742061646472657373",
                        "id": 5930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2340:33:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a",
                          "typeString": "literal_string \"not a treasury claimant address\""
                        },
                        "value": "not a treasury claimant address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_342d4f16787b14d4422d706d14a6067fcd8dcf625f1fac868a1ca7d35355548a",
                          "typeString": "literal_string \"not a treasury claimant address\""
                        }
                      ],
                      "id": 5923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2294:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5932,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:80:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5934,
                            "name": "treasuryBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5840,
                            "src": "2392:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5937,
                          "indexExpression": {
                            "expression": {
                              "id": 5935,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2408:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2408:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2392:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2422:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2392:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20747265617375727920726577617264732062616c616e6365",
                        "id": 5940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2425:29:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6",
                          "typeString": "literal_string \"no treasury rewards balance\""
                        },
                        "value": "no treasury rewards balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d158c8eaff111c15767fb9f88bc1066c1a058660d0a63cb3a7851a0381cb77f6",
                          "typeString": "literal_string \"no treasury rewards balance\""
                        }
                      ],
                      "id": 5933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2384:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5942,
                  "nodeType": "ExpressionStatement",
                  "src": "2384:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5950,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2528:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2528:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5952,
                              "name": "treasuryBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5840,
                              "src": "2540:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 5955,
                            "indexExpression": {
                              "expression": {
                                "id": 5953,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2556:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2556:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2540:27:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 5945,
                                    "name": "nocturnalFinance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5847,
                                    "src": "2487:16:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NocturnalFinanceInterface_$205",
                                      "typeString": "contract NocturnalFinanceInterface"
                                    }
                                  },
                                  "id": 5946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "noctAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 179,
                                  "src": "2487:28:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 5947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2487:30:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5944,
                              "name": "NoctInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "2473:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NoctInterface_$80_$",
                                "typeString": "type(contract NoctInterface)"
                              }
                            },
                            "id": 5948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2473:45:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoctInterface_$80",
                              "typeString": "contract NoctInterface"
                            }
                          },
                          "id": 5949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2473:54:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 5956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2473:95:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 5957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2570:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 5943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2465:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:123:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5959,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:123:28"
                }
              ]
            },
            "functionSelector": "05c4744b",
            "id": 5961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTreasuryRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2272:2:28"
            },
            "returnParameters": {
              "id": 5922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2284:0:28"
            },
            "scope": 5962,
            "src": "2243:352:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5963,
        "src": "1106:1495:28"
      }
    ],
    "src": "820:1782:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-05-20T06:19:55.988Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}